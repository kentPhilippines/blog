# Nginx配置 - 多域名静态页面优先访问
# 将此配置添加到你的nginx.conf或站点配置文件中

server {
    listen 80;
    server_name localhost domain1.com domain2.com;  # 添加你的所有域名
    root /path/to/your/project;  # 修改为你的项目路径
    index index.php index.html index.htm;

    # 设置域名变量，用于确定静态文件目录
    set $static_dir "default";
    
    # 根据域名设置静态目录
    if ($host = "localhost") {
        set $static_dir "localhost";
    }
    if ($host = "domain1.com") {
        set $static_dir "domain1";
    }
    if ($host = "domain2.com") {
        set $static_dir "domain2";
    }

    # 静态资源文件直接访问
    location ~* ^/(assets|uploads)/ {
        expires 1M;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # 首页处理
    location = / {
        # 首先尝试访问静态首页
        try_files /static/$static_dir/index.html @dynamic_index;
    }
    
    location @dynamic_index {
        fastcgi_pass php-fpm;  # 或者 unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index check_static.php;
        fastcgi_param SCRIPT_FILENAME $document_root/check_static.php;
        fastcgi_param QUERY_STRING path=index;
        include fastcgi_params;
    }

    # 新闻详情页: /news/123 或 /news/123.html
    location ~* ^/news/(\d+)(?:\.html)?$ {
        set $news_id $1;
        try_files /static/$static_dir/news/$news_id.html @dynamic_news;
    }
    
    location @dynamic_news {
        fastcgi_pass php-fpm;
        fastcgi_index check_static.php;
        fastcgi_param SCRIPT_FILENAME $document_root/check_static.php;
        fastcgi_param QUERY_STRING path=news/$news_id;
        include fastcgi_params;
    }

    # 分类页面: /category/分类名 或 /category/分类名.html
    location ~* ^/category/([^/]+)(?:\.html)?$ {
        set $category_name $1;
        try_files /static/$static_dir/category/$category_name.html @dynamic_category;
    }
    
    location @dynamic_category {
        fastcgi_pass php-fpm;
        fastcgi_index check_static.php;
        fastcgi_param SCRIPT_FILENAME $document_root/check_static.php;
        fastcgi_param QUERY_STRING path=category/$category_name;
        include fastcgi_params;
    }

    # 分类分页: /category/分类名/page-2.html
    location ~* ^/category/([^/]+)/page-(\d+)(?:\.html)?$ {
        set $category_name $1;
        set $page_num $2;
        try_files /static/$static_dir/category/$category_name/page-$page_num.html @dynamic_category_page;
    }
    
    location @dynamic_category_page {
        fastcgi_pass php-fpm;
        fastcgi_index check_static.php;
        fastcgi_param SCRIPT_FILENAME $document_root/check_static.php;
        fastcgi_param QUERY_STRING path=category/$category_name/page-$page_num;
        include fastcgi_params;
    }

    # 其他页面: /about, /contact, /privacy, /terms, /tags
    location ~* ^/(about|contact|privacy|terms|tags)(?:\.html)?$ {
        set $page_name $1;
        try_files /static/$static_dir/$page_name.html @dynamic_page;
    }
    
    location @dynamic_page {
        fastcgi_pass php-fpm;
        fastcgi_index check_static.php;
        fastcgi_param SCRIPT_FILENAME $document_root/check_static.php;
        fastcgi_param QUERY_STRING path=$page_name;
        include fastcgi_params;
    }

    # 直接访问已存在的静态HTML文件
    location ~* \.html?$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Static-Cache "HIT";
        try_files $uri @php;
    }

    # 直接访问PHP文件
    location ~ \.php$ {
        # 阻止访问敏感文件
        location ~ ^/(config\.php|static_handler\.php|generate_static\.php|check_static\.php) {
            deny all;
        }
        
        try_files $uri =404;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # 默认PHP处理
    location @php {
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        include fastcgi_params;
    }

    # 404错误处理
    error_page 404 /404.php;
    error_page 500 502 503 504 /500.php;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 缓存设置
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
    }

    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 访问日志
    access_log /var/log/nginx/static_access.log;
    error_log /var/log/nginx/static_error.log;
}

# HTTPS配置（可选）
# server {
#     listen 443 ssl http2;
#     server_name domain1.com domain2.com;
#     root /path/to/your/project;
#     
#     ssl_certificate /path/to/ssl/cert.pem;
#     ssl_certificate_key /path/to/ssl/private.key;
#     
#     # 其他配置同上...
# } 